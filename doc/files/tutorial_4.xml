<?xml version='1.0' encoding='iso-8859-1' ?>
<proc name="tutorial_4">
   <property name="DefaultStudyID" value="1"/>
   <objref name="CALCIUM_real" id="IDL:Ports/Calcium_Ports/Calcium_Real_Port:1.0"/>
   <type name="string" kind="string"/>
   <struct name="Engines/dataref">
      <member name="ref" type="string"/>
   </struct>
   <objref name="HOMARD_Boundary" id="IDL:HOMARD/HOMARD_Boundary:1.0"/>
   <objref name="HOMARD_Cas" id="IDL:HOMARD/HOMARD_Cas:1.0"/>
   <objref name="HOMARD_Hypothesis" id="IDL:HOMARD/HOMARD_Hypothesis:1.0"/>
   <objref name="HOMARD_Iteration" id="IDL:HOMARD/HOMARD_Iteration:1.0"/>
   <objref name="HOMARD_Zone" id="IDL:HOMARD/HOMARD_Zone:1.0"/>
   <objref name="Study" id="IDL:SALOMEDS/Study:1.0"/>
   <type name="bool" kind="bool"/>
   <sequence name="boolvec" content="bool"/>
   <type name="double" kind="double"/>
   <sequence name="dblevec" content="double"/>
   <objref name="file" id="file"/>
   <type name="int" kind="int"/>
   <sequence name="intvec" content="int"/>
   <struct name="stringpair">
      <member name="name" type="string"/>
      <member name="value" type="string"/>
   </struct>
   <sequence name="propvec" content="stringpair"/>
   <objref name="pyobj" id="python:obj:1.0"/>
   <sequence name="seqboolvec" content="boolvec"/>
   <sequence name="seqdblevec" content="dblevec"/>
   <sequence name="seqint" content="int"/>
   <sequence name="seqintvec" content="intvec"/>
   <sequence name="stringvec" content="string"/>
   <sequence name="seqstringvec" content="stringvec"/>
   <container name="DefaultContainer">
      <property name="container_name" value="FactoryServer"/>
      <property name="name" value="localhost"/>
   </container>
   <bloc name="Etude_Initialisation">
      <inline name="StudyCreation">
         <script><code><![CDATA[
import orbmodule
import SALOMEDS_idl

import HOMARD
import HOMARD_Gen_idl
import HOMARD_Cas_idl
import HOMARD_Iteration_idl
import HOMARD_Hypothesis_idl
import HOMARD_Zone_idl
import HOMARD_Boundary_idl

clt = orbmodule.client()
StudyManager = clt.Resolve("/myStudyManager")
CurrentStudy = StudyManager.GetStudyByID(1)
]]></code></script>
         <outport name="CurrentStudy" type="Study"/>
      </inline>
      <service name="SetCurrentStudy">
         <component>HOMARD</component>
         <load container="DefaultContainer"/>
         <method>SetCurrentStudy</method>
         <inport name="theStudy" type="Study"/>
      </service>
      <service name="CreateBoundarycyl_1_int">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateBoundaryCylinder</method>
         <inport name="BoundaryName" type="string"/>
         <inport name="Xcentre" type="double"/>
         <inport name="Ycentre" type="double"/>
         <inport name="Zcentre" type="double"/>
         <inport name="Xaxis" type="double"/>
         <inport name="Yaxis" type="double"/>
         <inport name="Zaxis" type="double"/>
         <inport name="Radius" type="double"/>
         <outport name="return" type="HOMARD_Boundary"/>
      </service>
      <service name="CreateBoundarycyl_1_ext">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateBoundaryCylinder</method>
         <inport name="BoundaryName" type="string"/>
         <inport name="Xcentre" type="double"/>
         <inport name="Ycentre" type="double"/>
         <inport name="Zcentre" type="double"/>
         <inport name="Xaxis" type="double"/>
         <inport name="Yaxis" type="double"/>
         <inport name="Zaxis" type="double"/>
         <inport name="Radius" type="double"/>
         <outport name="return" type="HOMARD_Boundary"/>
      </service>
      <service name="CreateBoundarycyl_2_int">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateBoundaryCylinder</method>
         <inport name="BoundaryName" type="string"/>
         <inport name="Xcentre" type="double"/>
         <inport name="Ycentre" type="double"/>
         <inport name="Zcentre" type="double"/>
         <inport name="Xaxis" type="double"/>
         <inport name="Yaxis" type="double"/>
         <inport name="Zaxis" type="double"/>
         <inport name="Radius" type="double"/>
         <outport name="return" type="HOMARD_Boundary"/>
      </service>
      <service name="CreateHypothesis_1">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateHypothesis</method>
         <inport name="HypoName" type="string"/>
         <outport name="return" type="HOMARD_Hypothesis"/>
      </service>
      <service name="CreateCase">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateCase</method>
         <inport name="CaseName" type="string"/>
         <inport name="MeshName" type="string"/>
         <inport name="FileName" type="string"/>
         <outport name="return" type="HOMARD_Cas"/>
      </service>
      <inline name="Hypo_Options_1">
         <script><code><![CDATA[# Raffinement uniforme
Hypo.SetAdapRefinUnRef(-1, 1, 0)
# Filtrage par des groupes
Hypo.AddGroup('T1_INT_I')
Hypo.AddGroup('T1_INT_O')
Hypo.AddGroup('T2_INT')
]]></code></script>
         <inport name="Hypo" type="HOMARD_Hypothesis"/>
      </inline>
      <inline name="Case_Options">
         <script><code><![CDATA[# Options
# =========
# Repertoire d'execution
Case.SetDirName(DirName)
# Options de conformite
Case.SetConfType(1)
# Liens avec les frontieres
Case.AddBoundaryGroup( 'intersection', '' )
Case.AddBoundaryGroup( 'cyl_1_int', 'T1_INT_I' )
Case.AddBoundaryGroup( 'cyl_1_ext', 'T1_EXT_I' )
Case.AddBoundaryGroup( 'cyl_1_int', 'T1_INT_O' )
Case.AddBoundaryGroup( 'cyl_1_ext', 'T1_EXT_O' )
Case.AddBoundaryGroup( 'cyl_2_int', 'T2_INT' )
Case.AddBoundaryGroup( 'cyl_2_ext', 'T2_EXT' )
# Resultats
# =========
# Iteration 0 associee
Iter0 = Case.GetIter0()
]]></code></script>
         <inport name="Case" type="HOMARD_Cas"/>
         <inport name="DirName" type="string"/>
         <outport name="Iter0" type="HOMARD_Iteration"/>
      </inline>
      <service name="CreateBoundarycyl_2_ext">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateBoundaryCylinder</method>
         <inport name="BoundaryName" type="string"/>
         <inport name="Xcentre" type="double"/>
         <inport name="Ycentre" type="double"/>
         <inport name="Zcentre" type="double"/>
         <inport name="Xaxis" type="double"/>
         <inport name="Yaxis" type="double"/>
         <inport name="Zaxis" type="double"/>
         <inport name="Radius" type="double"/>
         <outport name="return" type="HOMARD_Boundary"/>
      </service>
      <service name="CreateBoundaryintersection">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateBoundaryDi</method>
         <inport name="BoundaryName" type="string"/>
         <inport name="MeshName" type="string"/>
         <inport name="FileName" type="string"/>
         <outport name="return" type="HOMARD_Boundary"/>
      </service>
      <service name="CreateHypothesis_2">
         <node>Etude_Initialisation.SetCurrentStudy</node>
         <method>CreateHypothesis</method>
         <inport name="HypoName" type="string"/>
         <outport name="return" type="HOMARD_Hypothesis"/>
      </service>
      <inline name="Hypo_Options_2">
         <script><code><![CDATA[# Raffinement uniforme
Hypo.SetAdapRefinUnRef(-1, 1, 0)
# Filtrage par des groupes
Hypo.AddGroup('T1_EXT_I')
Hypo.AddGroup('T1_EXT_O')
Hypo.AddGroup('T2_EXT')
]]></code></script>
         <inport name="Hypo" type="HOMARD_Hypothesis"/>
      </inline>
      <control> <fromnode>StudyCreation</fromnode> <tonode>SetCurrentStudy</tonode> </control>
      <control> <fromnode>SetCurrentStudy</fromnode> <tonode>CreateBoundarycyl_1_int</tonode> </control>
      <control> <fromnode>CreateBoundarycyl_1_int</fromnode> <tonode>CreateBoundarycyl_1_ext</tonode> </control>
      <control> <fromnode>CreateBoundarycyl_1_ext</fromnode> <tonode>CreateBoundarycyl_2_int</tonode> </control>
      <control> <fromnode>CreateBoundarycyl_2_int</fromnode> <tonode>CreateBoundarycyl_2_ext</tonode> </control>
      <control> <fromnode>CreateHypothesis_1</fromnode> <tonode>Hypo_Options_1</tonode> </control>
      <control> <fromnode>CreateCase</fromnode> <tonode>Case_Options</tonode> </control>
      <control> <fromnode>Hypo_Options_1</fromnode> <tonode>CreateHypothesis_2</tonode> </control>
      <control> <fromnode>Case_Options</fromnode> <tonode>CreateHypothesis_1</tonode> </control>
      <control> <fromnode>CreateBoundarycyl_2_ext</fromnode> <tonode>CreateBoundaryintersection</tonode> </control>
      <control> <fromnode>CreateBoundaryintersection</fromnode> <tonode>CreateCase</tonode> </control>
      <control> <fromnode>CreateHypothesis_2</fromnode> <tonode>Hypo_Options_2</tonode> </control>
      <datalink control="false">
         <fromnode>StudyCreation</fromnode> <fromport>CurrentStudy</fromport>
         <tonode>SetCurrentStudy</tonode> <toport>theStudy</toport>
      </datalink>
      <datalink control="false">
         <fromnode>CreateHypothesis_1</fromnode> <fromport>return</fromport>
         <tonode>Hypo_Options_1</tonode> <toport>Hypo</toport>
      </datalink>
      <datalink control="false">
         <fromnode>CreateCase</fromnode> <fromport>return</fromport>
         <tonode>Case_Options</tonode> <toport>Case</toport>
      </datalink>
      <datalink control="false">
         <fromnode>CreateHypothesis_2</fromnode> <fromport>return</fromport>
         <tonode>Hypo_Options_2</tonode> <toport>Hypo</toport>
      </datalink>
   </bloc>
   <forloop name="ForLoop" nsteps="2">
      <inline name="HOMARD_2">
         <script><code><![CDATA[import os
#
# Hypothese
# =========
# . Nom de l'hypothese
# --------------------
HypoName = Hypo.GetName()
#
# Nom de la future iteration et du futur maillage
# ==========================
# . Nom de l'iteration precedente
LastIterName = LastIter.GetName()
# . Nom du maillage precedent
LastMeshName = LastIter.GetMeshName()#
#
aux = '%d' % (NumAdapt+2)
#
IterName = LastIterName[:-1] + aux
MeshName = LastMeshName[:-1] + aux
#
# Creation de l'iteration
# =======================
Iter = LastIter.NextIteration(IterName)
#
# Options de l'iteration
# ======================
# . Association de l'hypothese
Iter.AssociateHypo(HypoName)
#
# . Le fichier du futur maillage
aux = '%02d' % (NumAdapt+2)
MeshFile = os.path.join (DirName, "maill."+aux+".med")
Iter.SetMeshFile(MeshFile)
#
# . Le nom du futur maillage
Iter.SetMeshName(MeshName)
#
# Calcul si le precedent s'est bien passe
# ======
if LastPb :
  Pb = LastPb
  MessInfo = "Erreur dans HOMARD pour l'adaptation numero %d" % LastPb
else :
  Error = Iter.Compute(1, 1)
#
  if Error :
    Pb = NumAdapt+2
    MessInfo = "Erreur dans HOMARD pour l'adaptation numero %d" % NumAdapt
  else :
    Pb = 0
    MessInfo = ""

]]></code></script>
         <inport name="NumAdapt" type="int"/>
         <inport name="LastIter" type="HOMARD_Iteration"/>
         <inport name="Hypo" type="HOMARD_Hypothesis"/>
         <inport name="DirName" type="string"/>
         <inport name="LastPb" type="int"/>
         <outport name="MessInfo" type="string"/>
         <outport name="MeshFile" type="string"/>
         <outport name="Iter" type="HOMARD_Iteration"/>
         <outport name="Pb" type="int"/>
      </inline>
      <datalink control="false">
         <fromnode>HOMARD_2</fromnode> <fromport>Iter</fromport>
         <tonode>HOMARD_2</tonode> <toport>LastIter</toport>
      </datalink>
      <datalink control="false">
         <fromnode>HOMARD_2</fromnode> <fromport>Pb</fromport>
         <tonode>HOMARD_2</tonode> <toport>LastPb</toport>
      </datalink>
   </forloop>
   <inline name="Bilan">
      <script><code><![CDATA[from PyQt4 import QtGui
import sys
app = QtGui.QApplication(sys.argv)
if MessInfo != "" :
    MessageBoxTitle = "Bilan"
    QtGui.QMessageBox.warning(None, MessageBoxTitle, MessInfo)
else :
    MessageBoxTitle = "Bilan"
    MessInfo = "Le maillage final est dans le fichier : " + MeshFile
    QtGui.QMessageBox.information(None, MessageBoxTitle, MessInfo)
]]></code></script>
      <inport name="MessInfo" type="string"/>
      <inport name="MeshFile" type="string"/>
   </inline>
   <inline name="DataInit">
      <script><code><![CDATA[import os
pathHomard = os.getenv("HOMARD_ROOT_DIR")
data_dir = os.path.join(pathHomard, "share/doc/salome/gui/HOMARD/fr/_downloads")
print "data_dir =", data_dir
print os.listdir(data_dir)
#
# Maillage de la structure
# . Nom du maillage
MeshName = "PIQUAGE"
# . Fichier du maillage
FileName = os.path.join(data_dir, "tutorial_4.00.med")
#
# Maillage de la frontiere
# . Nom du maillage
BMeshName = "PIQUAGE"
# . Fichier du maillage
BFileName = os.path.join(data_dir, "tutorial_4.fr.med")
#
# Répertoire de travail
if os.environ.has_key("LOGNAME") :
  user = os.environ ["LOGNAME"]
else :
  user = "anonymous"
DirName = os.path.join( os.sep, "tmp", "HOMARD_"+user)
if not os.path.isdir(DirName) :
    os.mkdir (DirName)
]]></code></script>
      <outport name="MeshName" type="string"/>
      <outport name="FileName" type="string"/>
      <outport name="BMeshName" type="string"/>
      <outport name="BFileName" type="string"/>
      <outport name="DirName" type="string"/>
   </inline>
   <inline name="HOMARD_1">
      <script><code><![CDATA[import os
#
# Hypothese
# =========
# . Nom de l'hypothese
# --------------------
HypoName = Hypo.GetName()
#
# Nom de la future iteration et du futur maillage
# ==========================
# . Nom de l'iteration precedente
LastIterName = LastIter.GetName()
# . Nom du maillage precedent
LastMeshName = LastIter.GetMeshName()
#
IterName = LastIterName + "_1"
MeshName = LastMeshName + "_1"
#
# Creation de l'iteration
# =======================
Iter = LastIter.NextIteration(IterName)
#
# Options de l'iteration
# ======================
# . Association de l'hypothese
Iter.AssociateHypo(HypoName)
#
# . Le fichier du futur maillage
MeshFile = os.path.join (DirName, "maill.01.med")
Iter.SetMeshFile(MeshFile)
#
# . Le nom du futur maillage
Iter.SetMeshName(MeshName)
#
# Calcul
# ======
Error = Iter.Compute(1, 1)
#
# ============================
# Arret si erreur
if Error :
    Pb = 1
    MessInfo = "Erreur dans HOMARD pour la premiere adaptation"
# Sinon on enchaine sur 2 autres adaptations
else :
    Pb= 0
    MessInfo = ""

]]></code></script>
      <inport name="LastIter" type="HOMARD_Iteration"/>
      <inport name="Hypo" type="HOMARD_Hypothesis"/>
      <inport name="DirName" type="string"/>
      <outport name="MessInfo" type="string"/>
      <outport name="MeshFile" type="string"/>
      <outport name="Iter" type="HOMARD_Iteration"/>
      <outport name="Pb" type="int"/>
   </inline>
   <control> <fromnode>Etude_Initialisation</fromnode> <tonode>HOMARD_1</tonode> </control>
   <control> <fromnode>ForLoop</fromnode> <tonode>Bilan</tonode> </control>
   <control> <fromnode>DataInit</fromnode> <tonode>HOMARD_1</tonode> </control>
   <control> <fromnode>DataInit</fromnode> <tonode>Etude_Initialisation</tonode> </control>
   <control> <fromnode>HOMARD_1</fromnode> <tonode>ForLoop</tonode> </control>
   <datalink control="false">
      <fromnode>ForLoop</fromnode> <fromport>index</fromport>
      <tonode>ForLoop.HOMARD_2</tonode> <toport>NumAdapt</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>MeshName</fromport>
      <tonode>Etude_Initialisation.CreateCase</tonode> <toport>MeshName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>FileName</fromport>
      <tonode>Etude_Initialisation.CreateCase</tonode> <toport>FileName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>BMeshName</fromport>
      <tonode>Etude_Initialisation.CreateBoundaryintersection</tonode> <toport>MeshName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>BFileName</fromport>
      <tonode>Etude_Initialisation.CreateBoundaryintersection</tonode> <toport>FileName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>DirName</fromport>
      <tonode>HOMARD_1</tonode> <toport>DirName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>DirName</fromport>
      <tonode>Etude_Initialisation.Case_Options</tonode> <toport>DirName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>DataInit</fromnode> <fromport>DirName</fromport>
      <tonode>ForLoop.HOMARD_2</tonode> <toport>DirName</toport>
   </datalink>
   <datalink control="false">
      <fromnode>HOMARD_1</fromnode> <fromport>MessInfo</fromport>
      <tonode>Bilan</tonode> <toport>MessInfo</toport>
   </datalink>
   <datalink control="false">
      <fromnode>HOMARD_1</fromnode> <fromport>MeshFile</fromport>
      <tonode>Bilan</tonode> <toport>MeshFile</toport>
   </datalink>
   <datalink control="false">
      <fromnode>HOMARD_1</fromnode> <fromport>Iter</fromport>
      <tonode>ForLoop.HOMARD_2</tonode> <toport>LastIter</toport>
   </datalink>
   <datalink control="false">
      <fromnode>HOMARD_1</fromnode> <fromport>Pb</fromport>
      <tonode>ForLoop.HOMARD_2</tonode> <toport>LastPb</toport>
   </datalink>
   <datalink control="false">
      <fromnode>Etude_Initialisation.CreateHypothesis_2</fromnode> <fromport>return</fromport>
      <tonode>ForLoop.HOMARD_2</tonode> <toport>Hypo</toport>
   </datalink>
   <datalink control="false">
      <fromnode>ForLoop.HOMARD_2</fromnode> <fromport>MessInfo</fromport>
      <tonode>Bilan</tonode> <toport>MessInfo</toport>
   </datalink>
   <datalink control="false">
      <fromnode>ForLoop.HOMARD_2</fromnode> <fromport>MeshFile</fromport>
      <tonode>Bilan</tonode> <toport>MeshFile</toport>
   </datalink>
   <datalink control="false">
      <fromnode>Etude_Initialisation.Case_Options</fromnode> <fromport>Iter0</fromport>
      <tonode>HOMARD_1</tonode> <toport>LastIter</toport>
   </datalink>
   <datalink control="false">
      <fromnode>Etude_Initialisation.CreateHypothesis_1</fromnode> <fromport>return</fromport>
      <tonode>HOMARD_1</tonode> <toport>Hypo</toport>
   </datalink>
   <parameter>
      <tonode>ForLoop</tonode><toport>nsteps</toport>
      <value><int>2</int></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>BoundaryName</toport>
      <value><string>cyl_1_ext</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Xcentre</toport>
      <value><double>0</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Ycentre</toport>
      <value><double>25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Zcentre</toport>
      <value><double>-25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Xaxis</toport>
      <value><double>25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Yaxis</toport>
      <value><double>50</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Zaxis</toport>
      <value><double>75</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_ext</tonode><toport>Radius</toport>
      <value><double>100</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>BoundaryName</toport>
      <value><string>cyl_1_int</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Xcentre</toport>
      <value><double>0</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Ycentre</toport>
      <value><double>25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Zcentre</toport>
      <value><double>-25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Xaxis</toport>
      <value><double>25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Yaxis</toport>
      <value><double>50</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Zaxis</toport>
      <value><double>75</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_1_int</tonode><toport>Radius</toport>
      <value><double>75</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>BoundaryName</toport>
      <value><string>cyl_2_int</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Xcentre</toport>
      <value><double>17.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Ycentre</toport>
      <value><double>-2.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Zcentre</toport>
      <value><double>-12.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Xaxis</toport>
      <value><double>-100</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Yaxis</toport>
      <value><double>-75</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Zaxis</toport>
      <value><double>-25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_int</tonode><toport>Radius</toport>
      <value><double>25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateCase</tonode><toport>CaseName</toport>
      <value><string>tutorial_4</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateHypothesis_1</tonode><toport>HypoName</toport>
      <value><string>Hypo_1</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>BoundaryName</toport>
      <value><string>cyl_2_ext</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Xcentre</toport>
      <value><double>17.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Ycentre</toport>
      <value><double>-2.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Zcentre</toport>
      <value><double>-12.5</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Xaxis</toport>
      <value><double>-100</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Yaxis</toport>
      <value><double>-75</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Zaxis</toport>
      <value><double>-25</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundarycyl_2_ext</tonode><toport>Radius</toport>
      <value><double>50</double></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateBoundaryintersection</tonode><toport>BoundaryName</toport>
      <value><string>intersection</string></value>
   </parameter>
   <parameter>
      <tonode>Etude_Initialisation.CreateHypothesis_2</tonode><toport>HypoName</toport>
      <value><string>Hypo_2</string></value>
   </parameter>
   <presentation name="Etude_Initialisation.StudyCreation" x="2.5" y="34" width="158" height="63" expanded="1" expx="2.5" expy="34" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="ForLoop" x="385" y="802.5" width="169" height="237" expanded="1" expx="385" expy="802.5" expWidth="169" expHeight="237" shownState="0"/>
   <presentation name="HOMARD_1" x="6" y="804.5" width="158" height="144" expanded="1" expx="6" expy="804.5" expWidth="158" expHeight="144" shownState="0"/>
   <presentation name="DataInit" x="4" y="32" width="158" height="171" expanded="1" expx="4" expy="32" expWidth="158" expHeight="171" shownState="0"/>
   <presentation name="Bilan" x="720.5" y="770" width="158" height="90" expanded="1" expx="720.5" expy="770" expWidth="158" expHeight="90" shownState="0"/>
   <presentation name="ForLoop.HOMARD_2" x="7" y="62" width="158" height="171" expanded="1" expx="7" expy="62" expWidth="158" expHeight="171" shownState="0"/>
   <presentation name="Etude_Initialisation.Case_Options" x="177.5" y="358.5" width="158" height="90" expanded="1" expx="177.5" expy="358.5" expWidth="158" expHeight="90" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateBoundarycyl_1_ext" x="161" y="98" width="158" height="252" expanded="1" expx="161" expy="98" expWidth="158" expHeight="252" shownState="0"/>
   <presentation name="Etude_Initialisation.SetCurrentStudy" x="161.5" y="34" width="158" height="63" expanded="1" expx="161.5" expy="34" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="Etude_Initialisation" x="4" y="204" width="802" height="549" expanded="1" expx="4" expy="204" expWidth="802" expHeight="549" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateBoundarycyl_1_int" x="2.5" y="98.5" width="158" height="252" expanded="1" expx="2.5" expy="98.5" expWidth="158" expHeight="252" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateBoundarycyl_2_int" x="319.5" y="98.5" width="158" height="252" expanded="1" expx="319.5" expy="98.5" expWidth="158" expHeight="252" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateCase" x="4" y="357" width="158" height="117" expanded="1" expx="4" expy="357" expWidth="158" expHeight="117" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateHypothesis_1" x="4" y="481" width="158" height="63" expanded="1" expx="4" expy="481" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="Etude_Initialisation.Hypo_Options_1" x="165" y="481.5" width="158" height="63" expanded="1" expx="165" expy="481.5" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateBoundarycyl_2_ext" x="479" y="99.5" width="158" height="252" expanded="1" expx="479" expy="99.5" expWidth="158" expHeight="252" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateBoundaryintersection" x="640" y="99.5" width="158" height="117" expanded="1" expx="640" expy="99.5" expWidth="158" expHeight="117" shownState="0"/>
   <presentation name="Etude_Initialisation.CreateHypothesis_2" x="342.5" y="482" width="158" height="63" expanded="1" expx="342.5" expy="482" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="Etude_Initialisation.Hypo_Options_2" x="517.095" y="482.405" width="158" height="63" expanded="1" expx="517.095" expy="482.405" expWidth="158" expHeight="63" shownState="0"/>
   <presentation name="__ROOT__" x="0" y="0" width="882.5" height="1043.5" expanded="1" expx="0" expy="0" expWidth="882.5" expHeight="1043.5" shownState="0"/>
</proc>
