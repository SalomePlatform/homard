// Copyright (C) 2011  CEA/DEN, EDF R&D
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

#ifndef __HOMARD_GEN__
#define __HOMARD_GEN__

#include "SALOME_Component.idl"
#include "SALOME_Exception.idl"
#include "SALOMEDS.idl"

#include "HOMARD_Cas.idl"
#include "HOMARD_Hypothesis.idl"
#include "HOMARD_Iteration.idl"
#include "HOMARD_Zone.idl"
#include "HOMARD_Boundary.idl"

module HOMARD
{
  typedef sequence<string> listeHypotheses;
  typedef sequence<string> listeZones;
  typedef sequence<string> listeIterations;
  typedef sequence<string> listeCases;
  typedef sequence<string> listeBoundarys;

  interface HOMARD_Gen : Engines::EngineComponent, SALOMEDS::Driver
  {
    HOMARD_Cas        CreateCase(in string nomCas, in string MeshName, in string FileName )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Hypothesis CreateHypothesis(in string nomHypothesis )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Iteration  CreateIteration(in string nomIter, in string nomIterParent )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZone(in string nomZone, in long typeZone)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneBox (in string nomZone,
                                     in double Xmini, in double Xmaxi,
                                     in double Ymini, in double Ymaxi,
                                     in double Zmini, in double Zmaxi)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneSphere (in string nomZone, 
                                        in double Xcentre, in double Ycentre, in double Zcentre, 
                                        in double Rayon)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneCylinder (in string nomZone,
                                          in double Xcentre, in double Ycentre, in double Zcentre,
                                          in double Xaxe, in double Yaxe, in double Zaxe,
                                          in double Rayon, in double Haut)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZonePipe (in string nomZone,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Xaxe, in double Yaxe, in double Zaxe,
                                      in double Rayon, in double Haut, in double Rayonint)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneBox2D (in string nomZone,
                                       in double Umini, in double Umaxi,
                                       in double Vmini, in double Vmaxi,
                                       in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneDisk (in string nomZone,
                                      in double Ucentre, in double Vcentre,
                                      in double Rayon, in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneDiskWithHole (in string nomZone,
                                              in double Ucentre, in double Vcentre,
                                              in double Rayon, in double Rayonint,
                                              in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   CreateBoundary(in string nomBoundary, in long typeBoundary)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   CreateBoundaryDi (in string nomBoundary, in string MeshName, in string FileName);
    HOMARD_Boundary   CreateBoundaryCylinder (in string nomBoundary,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Xaxis, in double Yaxis, in double Zaxis,
                                      in double Rayon);
    HOMARD_Boundary   CreateBoundarySphere (in string nomBoundary,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Rayon);
    void AssociateIterIter(in string nomIterParent, in string nomIter)
                                                           raises (SALOME::SALOME_Exception);
    void AssociateIterHypo(in string nomIter, in string nomHypothesis)
                                                           raises (SALOME::SALOME_Exception);
    void AssociateHypoZone(in string nomZone, in string nomHypothesis)
                                                           raises (SALOME::SALOME_Exception);
    void DissociateHypoZone(in string nomZone, in string nomHypothesis)
                                                           raises (SALOME::SALOME_Exception);

    void InvalideBoundary (in string nomBoundary)          raises (SALOME::SALOME_Exception);
    void InvalideZone (in string nomZone)                  raises (SALOME::SALOME_Exception);
    void InvalideHypo (in string nomHypo)                  raises (SALOME::SALOME_Exception);
    void InvalideIter (in string nomIter)                  raises (SALOME::SALOME_Exception);

    boolean  Compute (in string nomIter, in long etatMenage)
                                                           raises (SALOME::SALOME_Exception);

    boolean  VerifieDir (in string nomIter)                raises (SALOME::SALOME_Exception);

    string  GetCaseName(in string nomIter)                 raises (SALOME::SALOME_Exception);

    void  PublishFileUnderIteration(in string NomIter, in string NomFich, in string Commentaire)
                                                           raises (SALOME::SALOME_Exception);
    void  PublishResultInSmesh(in string NomFich, in long IconeType)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Cas        GetCas(in string nomCas)             raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   GetBoundary(in string nomBoundary)   raises (SALOME::SALOME_Exception);
    HOMARD_Zone       GetZone(in string nomZone)           raises (SALOME::SALOME_Exception);
    HOMARD_Hypothesis GetHypothesis(in string nomHypo)     raises (SALOME::SALOME_Exception);
    HOMARD_Iteration  GetIteration(in string nomIter)      raises (SALOME::SALOME_Exception);

    listeCases      GetAllCases()                          raises (SALOME::SALOME_Exception);
    listeBoundarys  GetAllBoundarys()                      raises (SALOME::SALOME_Exception);
    listeHypotheses GetAllHypotheses()                     raises (SALOME::SALOME_Exception);
    listeZones      GetAllZones()                          raises (SALOME::SALOME_Exception);
    listeIterations GetAllIterations()                     raises (SALOME::SALOME_Exception);

    void     SetCurrentStudy(in SALOMEDS::Study theStudy)  raises (SALOME::SALOME_Exception);
    SALOMEDS::Study GetCurrentStudy()                      raises (SALOME::SALOME_Exception);
  };
};

#endif

