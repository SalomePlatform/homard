// Copyright (C) 2011-2012  CEA/DEN, EDF R&D
//
// This library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Lesser General Public
// License as published by the Free Software Foundation; either
// version 2.1 of the License.
//
// This library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public
// License along with this library; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
//
// See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
//

#ifndef __HOMARD_GEN__
#define __HOMARD_GEN__

#include "SALOME_Component.idl"
#include "SALOME_Exception.idl"
#include "SALOMEDS.idl"

#include "HOMARD_Cas.idl"
#include "HOMARD_Hypothesis.idl"
#include "HOMARD_Iteration.idl"
#include "HOMARD_Zone.idl"
#include "HOMARD_Boundary.idl"

module HOMARD
{
  typedef sequence<string> listeHypotheses;
  typedef sequence<string> listeZones;
  typedef sequence<string> listeIterations;
  typedef sequence<string> listeCases;
  typedef sequence<string> listeBoundarys;

  interface HOMARD_Gen : Engines::EngineComponent, SALOMEDS::Driver
  {
//
// A. Les methodes qui suivent sont celles que l'on retrouvera dans
//    le fichier resources/HOMARDCatalog.xml.in pour definir le composant HOMARD dans YACS
//    A priori, ce sont les seules sont l'utilisateur doit connaitre l'existence.
//
// A.1. Les creations
//
    HOMARD_Cas        CreateCase(in string CaseName, in string MeshName, in string FileName )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Hypothesis CreateHypothesis(in string HypoName )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Iteration  CreateIteration(in string IterName, in string PreviousIterName )
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneBox (in string ZoneName,
                                     in double Xmini, in double Xmaxi,
                                     in double Ymini, in double Ymaxi,
                                     in double Zmini, in double Zmaxi)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneSphere (in string ZoneName,
                                        in double Xcentre, in double Ycentre, in double Zcentre,
                                        in double Radius)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneCylinder (in string ZoneName,
                                          in double Xcentre, in double Ycentre, in double Zcentre,
                                          in double Xaxis, in double Yaxis, in double Zaxis,
                                          in double Radius, in double Height)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZonePipe (in string ZoneName,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Xaxis, in double Yaxis, in double Zaxis,
                                      in double Radius, in double Height, in double InternalRadius)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneBox2D (in string ZoneName,
                                       in double Umini, in double Umaxi,
                                       in double Vmini, in double Vmaxi,
                                       in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneDisk (in string ZoneName,
                                      in double Ucentre, in double Vcentre,
                                      in double Radius, in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Zone       CreateZoneDiskWithHole (in string ZoneName,
                                              in double Ucentre, in double Vcentre,
                                              in double Radius, in double InternalRadius,
                                              in long Orient)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   CreateBoundaryDi (in string BounName, in string MeshName, in string FileName)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   CreateBoundaryCylinder (in string BounName,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Xaxis, in double Yaxis, in double Zaxis,
                                      in double Radius)
                                                           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   CreateBoundarySphere (in string BounName,
                                      in double Xcentre, in double Ycentre, in double Zcentre,
                                      in double Radius)
                                                           raises (SALOME::SALOME_Exception);
//
// A.2. Les associations
//
    void AssociateIterHypo(in string IterName, in string HypoName)
                                                           raises (SALOME::SALOME_Exception);
    void AssociateHypoZone(in string HypoName, in string ZoneName, in long TypeUse)
                                                           raises (SALOME::SALOME_Exception);
//
// A.3. Les informations
//
    string            GetCaseName(in string IterName)      raises (SALOME::SALOME_Exception);
    HOMARD_Cas        GetCas(in string CaseName)           raises (SALOME::SALOME_Exception);
    HOMARD_Boundary   GetBoundary(in string BounName)      raises (SALOME::SALOME_Exception);
    HOMARD_Zone       GetZone(in string ZoneName)          raises (SALOME::SALOME_Exception);
    HOMARD_Hypothesis GetHypothesis(in string HypoName)    raises (SALOME::SALOME_Exception);
    HOMARD_Iteration  GetIteration(in string IterName)     raises (SALOME::SALOME_Exception);
    listeCases      GetAllCases()                          raises (SALOME::SALOME_Exception);
    listeBoundarys  GetAllBoundarys()                      raises (SALOME::SALOME_Exception);
    listeHypotheses GetAllHypotheses()                     raises (SALOME::SALOME_Exception);
    listeZones      GetAllZones()                          raises (SALOME::SALOME_Exception);
    listeIterations GetAllIterations()                     raises (SALOME::SALOME_Exception);
//
// A.4. L'etude
//
    void     SetCurrentStudy(in SALOMEDS::Study theStudy)  raises (SALOME::SALOME_Exception);
//
// B. Les methodes qui suivent n'apparaissent pas dans le composant HOMARD dans YACS
//    L'utilisateur ne devrait pas les connaitre (ni s'en servir, a fortiori)
//
    void AssociateIterIter(in string PreviousIterName, in string IterName)
                                                           raises (SALOME::SALOME_Exception);
    void DissociateHypoZone(in string ZoneName, in string HypoName)
                                                           raises (SALOME::SALOME_Exception);

    void InvalideBoundary (in string BounName)             raises (SALOME::SALOME_Exception);
    void InvalideZone (in string ZoneName)                 raises (SALOME::SALOME_Exception);
    void InvalideHypo (in string HypoName)                 raises (SALOME::SALOME_Exception);
    void InvalideIter (in string IterName)                 raises (SALOME::SALOME_Exception);

    long  Compute (in string IterName, in long etatMenage)
                                                           raises (SALOME::SALOME_Exception);

    boolean  VerifieDir (in string IterName)               raises (SALOME::SALOME_Exception);

    void  PublishFileUnderIteration(in string NomIter, in string NomFich, in string Commentaire)
                                                           raises (SALOME::SALOME_Exception);
    void  PublishResultInSmesh(in string NomFich, in long IconeType)
                                                           raises (SALOME::SALOME_Exception);

    SALOMEDS::Study GetCurrentStudy()                      raises (SALOME::SALOME_Exception);
    long     GetCurrentStudyID()                           raises (SALOME::SALOME_Exception);
  };
};

#endif

